snippet rimpprop "Import prop-types"
import PropTypes from 'prop-types';
endsnippet

snippet rpropfn "prop-types function"
PropTypes.func.isRequired,
endsnippet
snippet rpropbool "prop-types boolean"
PropTypes.bool.isRequired,
endsnippet
snippet rpropstr "prop-types boolean"
PropTypes.string.isRequired,
endsnippet
snippet rpropshape "prop-types symbol"
PropTypes.shape({
	$0
}).isRequired,
endsnippet

snippet rpropdef "React: Define prop type in react js"
${1:`!p snip.rv = os.path.splitext(snip.fn)[0]`}.propTypes = {
	$0
}
endsnippet

snippet rcmd "Lifecycle component did mount"
componentDidMount($1) {
	$0
}
endsnippet

snippet reddef "Reducer boiler plate"
const ${1:`!p snip.rv = os.path.splitext(snip.fn)[0]`} = (state = {}, action = {}) => {
	switch(action.type) {
		$0
		default: return state;
	}
}

expor.default $1;
endsnippet

snippet reactfn "React as arrow function"
import React from 'react';

const ${1:`!p snip.rv = os.path.splitext(snip.fn)[0]`} = ($2) => (
	<$3>
		$0
	</$3>
)

export default $1;
endsnippet

snippet reactclass "React as arrow function"
import React from 'react';

class ${1:`!p snip.rv = os.path.splitext(snip.fn)[0]`} extends React.Component {
	constructor(props) {
		super(props);
	}

	render() {
		return (
			$0
		)
	}
}

export default $1;
endsnippet
